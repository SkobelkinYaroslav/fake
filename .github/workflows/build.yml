name: Build

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  TAG_VERSION: ${{ github.ref_name }}
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}

    - name: Cache
      uses: actions/cache@v4.0.0
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
      
    - name: Build
      run: make build_all

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Create Github Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "releases/*.zip"
        body: ${{ env.TAG_VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        allowUpdates: true